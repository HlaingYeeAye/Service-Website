{"ast":null,"code":"\"use client\";\n\nimport React, { useState } from 'react';\nimport Input from '../../input/Input';\nimport { toHexFormat } from '../color';\nimport { generateColor } from '../util';\nconst hexReg = /(^#[\\da-f]{6}$)|(^#[\\da-f]{8}$)/i;\nconst isHexString = hex => hexReg.test(\"#\".concat(hex));\nconst ColorHexInput = _ref => {\n  let {\n    prefixCls,\n    value,\n    onChange\n  } = _ref;\n  const colorHexInputPrefixCls = \"\".concat(prefixCls, \"-hex-input\");\n  const [internalValue, setInternalValue] = useState('');\n  const hexValue = value ? toHexFormat(value.toHexString()) : internalValue;\n  const handleHexChange = e => {\n    const originValue = e.target.value;\n    setInternalValue(toHexFormat(originValue));\n    if (isHexString(toHexFormat(originValue, true))) {\n      onChange === null || onChange === void 0 ? void 0 : onChange(generateColor(originValue));\n    }\n  };\n  return /*#__PURE__*/React.createElement(Input, {\n    className: colorHexInputPrefixCls,\n    value: hexValue,\n    prefix: \"#\",\n    onChange: handleHexChange,\n    size: \"small\"\n  });\n};\nexport default ColorHexInput;","map":{"version":3,"names":["React","useState","Input","toHexFormat","generateColor","hexReg","isHexString","hex","test","concat","ColorHexInput","_ref","prefixCls","value","onChange","colorHexInputPrefixCls","internalValue","setInternalValue","hexValue","toHexString","handleHexChange","e","originValue","target","createElement","className","prefix","size"],"sources":["D:/Project/Visa Project/node_modules/antd/es/color-picker/components/ColorHexInput.js"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from 'react';\nimport Input from '../../input/Input';\nimport { toHexFormat } from '../color';\nimport { generateColor } from '../util';\nconst hexReg = /(^#[\\da-f]{6}$)|(^#[\\da-f]{8}$)/i;\nconst isHexString = hex => hexReg.test(`#${hex}`);\nconst ColorHexInput = _ref => {\n  let {\n    prefixCls,\n    value,\n    onChange\n  } = _ref;\n  const colorHexInputPrefixCls = `${prefixCls}-hex-input`;\n  const [internalValue, setInternalValue] = useState('');\n  const hexValue = value ? toHexFormat(value.toHexString()) : internalValue;\n  const handleHexChange = e => {\n    const originValue = e.target.value;\n    setInternalValue(toHexFormat(originValue));\n    if (isHexString(toHexFormat(originValue, true))) {\n      onChange === null || onChange === void 0 ? void 0 : onChange(generateColor(originValue));\n    }\n  };\n  return /*#__PURE__*/React.createElement(Input, {\n    className: colorHexInputPrefixCls,\n    value: hexValue,\n    prefix: \"#\",\n    onChange: handleHexChange,\n    size: \"small\"\n  });\n};\nexport default ColorHexInput;"],"mappings":"AAAA,YAAY;;AAEZ,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,SAASC,WAAW,QAAQ,UAAU;AACtC,SAASC,aAAa,QAAQ,SAAS;AACvC,MAAMC,MAAM,GAAG,kCAAkC;AACjD,MAAMC,WAAW,GAAGC,GAAG,IAAIF,MAAM,CAACG,IAAI,KAAAC,MAAA,CAAKF,GAAG,CAAE,CAAC;AACjD,MAAMG,aAAa,GAAGC,IAAI,IAAI;EAC5B,IAAI;IACFC,SAAS;IACTC,KAAK;IACLC;EACF,CAAC,GAAGH,IAAI;EACR,MAAMI,sBAAsB,MAAAN,MAAA,CAAMG,SAAS,eAAY;EACvD,MAAM,CAACI,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMiB,QAAQ,GAAGL,KAAK,GAAGV,WAAW,CAACU,KAAK,CAACM,WAAW,CAAC,CAAC,CAAC,GAAGH,aAAa;EACzE,MAAMI,eAAe,GAAGC,CAAC,IAAI;IAC3B,MAAMC,WAAW,GAAGD,CAAC,CAACE,MAAM,CAACV,KAAK;IAClCI,gBAAgB,CAACd,WAAW,CAACmB,WAAW,CAAC,CAAC;IAC1C,IAAIhB,WAAW,CAACH,WAAW,CAACmB,WAAW,EAAE,IAAI,CAAC,CAAC,EAAE;MAC/CR,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACV,aAAa,CAACkB,WAAW,CAAC,CAAC;IAC1F;EACF,CAAC;EACD,OAAO,aAAatB,KAAK,CAACwB,aAAa,CAACtB,KAAK,EAAE;IAC7CuB,SAAS,EAAEV,sBAAsB;IACjCF,KAAK,EAAEK,QAAQ;IACfQ,MAAM,EAAE,GAAG;IACXZ,QAAQ,EAAEM,eAAe;IACzBO,IAAI,EAAE;EACR,CAAC,CAAC;AACJ,CAAC;AACD,eAAejB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}